# Logmonster configuration file

##
# Logbase - path to web logs. Logmonster will determine where 
#           logs are based upon $logbase and the date being processed. 
#
#           Use cronolog or something like it. Apache recommends it:
#
#           http://httpd.apache.org/docs/misc/FAQ-I.html#rotate
#
#           Apache 2.0 expands cronolog support by allowing ErrorLogs to be
#           piped to cronolog as well.
##

logbase   = /var/log/http

##
# log file owner - the user and group that owns the Apache log files
##

log_user  = www
log_group = www

##
# tmpdir - the place where logmonster can create temp files. Make sure this
#          directory exists.
##

tmpdir    = /var/log/http/tmp

##
# etc_dir - directory where awstats config files are stored.
##

confdir   = /etc/awstats

##
# statsdir - directory where awstats DB files are stored.
##

statsdir  = /var/db/awstats

##
# userlogs - some users want access to their raw HTTP logs. If you host
#            their site on multiple servers and log directly to their home
#            directory (from each server), they end up with several log
#            files, not in sequential order, and log processors can't deal
#            with that. Instead, send the logs off to /var/log/apache and
#            at the end of each period, Logmonster will collect the logs
#            from each server, merge them, feed them through the processor
#            of your choice, and then drop the logs into the userlogs dir
#            within DocumentRoot.
#
#            I would recommend putting the userlogs outside the DocumentRoot
#            eg ../logs (Yes it works) so the logs are inaccessible via http.
#            --Gernot Hueber
##

userlogs  = logs

##
# access - What your http access logs are named. This needs to match the 
#          filename given in the CustomLog directive of httpd.conf
##

access    = access.log

##
# error  - What your http error logs are named. This needs to match the 
#          filename given in the ErrorLog directive of httpd.conf
##

error     = error.log

##
# default_vhost = www.example.com
#
#           any log entries without a vhost name appended (see step 3 in
#           INSTALL) will get assigned to the default_vhost
##

default_vhost = www.example.com

##
# processor - Which log file processor to feed the logs through. Currently,
#             webalizer, http-analzye, and awstats are supported.
#
#             This is the default processor and can be overridden for each
#             virtualhost/domain by placing a .processor file in the stats
#             dir. The files first line must be the name of the
#             processor: awstats, http-analyze, or webalizer.
## 

processor = awstats

##
# hosts  - a space delimited list of the hostname(s) of your web servers. 
#          Logmonster will retrieve the log files from each server. In order
#          to retrieve logs from remote servers, you must make sure ssh key
#          based authentication is set up between the machine you are 
#          running logmonster on and your log/web servers.
##
#hosts     = localhost ams.simerson.net seattle.simerson.net

hosts     = localhost

##
# Countlog - is a binary value, 0 = off, 1 = on. If enabled, logmonster will
#            Write hit counts to a count file in the same directory as your
#            Apache logs. This feature integrates nicely with RRDUtil to 
#            graph web hits for domains over extended periods of time. 
#
#              See http://www.tnpi.biz/internet/manage/rrdutil/
##

CountLog  = 1

##
# clean - Logmonster creates a bunch of scratch files in tmpdir while it's
#         working. If you set clean to 0 (default = 1) then it'll leave the
#         temp files behind. This is useful when I'm debugging, and you
#         might find it useful as well.
##

clean  = 1

##
# spam_check - Checks your web server logs for the presense of referral spam.
#              It takes a bit longer to process the logs, but if the referral
#              spammers target your web site, you see exactly why this is so 
#              useful.
##

spam_check = 1

##
# report_ua - Includes a report of what user agents are spamming your referrer
#             logs. Useful if you want to implement real-time filters on your
#             web server to block this crap.
##

report_spam_user_agents = 1

##
# report_ua - Includes a report of what user agents are spamming your referrer
#             logs. Useful if you want to implement real-time filters on your
#             web server to block this crap.
##

report_spam_referrers  = 0
